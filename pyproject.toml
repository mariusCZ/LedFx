[tool.poetry]
name = "ledfx"
version = "2.0.84"
description = "A network based light effect controller"
authors = ["Your Name <you@example.com>"]
license = "MIT License"
readme = "README.md"
packages = [{include = "ledfx"}]

[tool.poetry.scripts]
ledfx = 'ledfx.__main__:main'

[tool.poetry.dependencies]
numpy = "~=1.23"
wheel = ">=0.36.2"
python = ">=3.8.1,<3.11"
sphinx = "<7.0.0"
sphinxcontrib-websupport = "1.2.4"
sphinxcontrib-httpdomain = "1.8.1"
sphinx-autodoc-typehints = "1.23.0"
sphinx-autodoc-annotation = "1.0-1"
sphinx-autobuild = "^2020.9.1"
sphinx_rtd_theme = "1.2.2"
sphinx-toolbox = "3.4.0"
rstcheck = "6.1.2"
aiohttp = ">=3.8.3,<3.9.0"
aiohttp-cors = ">=0.7.0"
aubio = ">=0.4.9"
cython = ">=0.29.21"
certifi = ">=2020.12.5"
multidict = ">=5.0.0,<5.1.0"
openrgb-python = ">=0.2.10,<0.3.0"
paho-mqtt = ">1.5.1"
psutil = ">=5.8.0"
pyserial = ">=3.5"
pystray = ">=0.17"
python-rtmidi = ">=1.5.6,<1.6.0"
requests = ">=2.28.2,<2.29.0"
sacn = ">=1.6.3,<1.7.0"
sentry-sdk = "1.14.0"
sounddevice = ">=0.4.2,<0.5.0"
samplerate = ">=0.1.0"
icmplib = ">=3.0.3,<3.1.0"
voluptuous = ">=0.12.1,<0.13.0"
zeroconf = ">=0.39.4,<0.40.0"
pillow = ">=8.4.0"
flux-led = ">=0.28.35"
python-osc = ">=1.8.3,<1.9.0"
pywin32 = {version = ">=302", platform = "win32"}
uvloop = {version = ">=0.16.0", markers = "sys_platform != 'win32'"}
rpi-ws281x = {version = ">=4.3.0", platform = "linux"}
python-mbedtls = {version = "~=2.7.1", markers = "(sys_platform == 'linux' and platform_machine != 'aarch64' and platform_machine != 'armv7l') or sys_platform == 'win32' or sys_platform == 'darwin'"}


[tool.poetry.group.dev.dependencies]
flake8 = ">=6.0.0,<6.1.0"
black = ">=23.3.0,<23.4.0"
isort = ">=5.12.0,<5.13.0"
pre-commit = ">=3.3.0,<3.4.0"
cython = ">=0.29.21,<0.30.0"

[tool.pytest.ini_options]
addopts = "tests"
testpaths = "tests"
norecursedirs = [
    "dist",
    "build",
    ".tox",
]

[tool.poetry.extras]
docs = [
    "sphinx",
    "sphinxcontrib-websupport",
    "sphinxcontrib-httpdomain",
    "sphinx-autodoc-typehints",
    "sphinx-autodoc-annotation",
    "sphinx-autobuild",
    "sphinx-rtd-theme",
    "sphinx-toolbox",
    "rstcheck",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
